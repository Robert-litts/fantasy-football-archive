package templates

import (
	"github.com/Robert-litts/fantasy-football-archive/internal/db"
	"strconv"
)

templ DraftBoard(drafts []db.GetDraftBoardWithSummaryRow, leagues []db.GetAllLeaguesRow, selectedLeagueID int, maxRounds, maxPicks int) {
	<div id="draftboard-container" class="min-h-screen px-4 py-8 bg-gray-900">
		<div class="max-w-7xl mx-auto">
			<div class="flex justify-between items-center mb-6">
				<h1 class="text-3xl font-bold text-gray-100">
					if len(drafts) > 0 {
						Draft Board { strconv.Itoa(int(drafts[0].Year)) }
					} else {
						Draft Board
					}
				</h1>
			</div>
			<div id="draft-board-container" class="grid gap-4">
				if len(drafts) > 0 {
					// Group picks by round
					for round := 1; round <= maxRounds; round++ {
						<div class="flex flex-col">
							<div class="text-xl font-semibold mb-2 text-gray-300">Round { strconv.Itoa(round) }</div>
							<div class={ "grid grid-cols-" + strconv.Itoa(int(drafts[0].TeamCount)) + " gap-4" }>
								for pick := 1; pick <= int(drafts[0].TeamCount); pick++ {
									// Calculate the index in the drafts slice
									if idx := (round-1)*int(drafts[0].TeamCount) + (pick-1); idx < len(drafts) {
										<div class="bg-gray-800 p-4 rounded-lg border border-gray-700 hover:border-blue-500 transition-colors">
											<div class="flex flex-col space-y-2">
												<div class="text-sm font-medium text-gray-400">
													Round { strconv.Itoa(int(drafts[idx].RoundNum)) } Pick { strconv.Itoa(int(drafts[idx].RoundPick)) }
												</div>
												<div class="flex justify-between items-center">
													<span class="text-xs text-gray-500">Overall</span>
													<span class="text-sm font-bold text-gray-300">#{ strconv.Itoa(int(drafts[idx].OverallPick)) }</span>
												</div>
												<div class="flex justify-between items-center">
													<span class="text-xs text-gray-500">Player Name</span>
													<span class="text-sm font-medium text-gray-300">{ drafts[idx].PlayerName }</span>
												</div>
												<div class="flex justify-between items-center">
													<span class="text-xs text-gray-500">Team</span>
													<span class="text-sm font-medium text-gray-300">{ drafts[idx].TeamName }</span>
												</div>
											</div>
										</div>
									} else {
										<div class="bg-gray-800/50 p-4 rounded-lg border border-gray-700/50"></div>
									}
								}
							</div>
						</div>
					}
				} else {
					<div class="text-center text-gray-400 py-8">
						No draft data available for the selected league
					</div>
				}
			</div>
		</div>
	</div>
}

templ DraftPage(leagues []db.GetAllLeaguesRow) {
	<div class="max-w-7xl mx-auto">
		<h1 class="text-3xl font-bold mb-6">Draft Boards</h1>
		<div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
			for _, league := range leagues {
				<a
					href="#"
					hx-get={ "/drafts/" + strconv.Itoa(int(league.ID)) }
					hx-target="main"
					class="bg-gray-800 p-6 rounded-lg border border-gray-700 hover:border-blue-500 transition-colors"
				>
					<h2 class="text-xl font-semibold text-gray-100 mb-2">
						Season { strconv.Itoa(int(league.Year)) }
					</h2>
					<p class="text-gray-400">
						League ID { strconv.Itoa(int(league.ID)) }
					</p>
				</a>
			}
		</div>
	</div>
}

templ DraftBoardPage(drafts []db.GetDraftBoardWithSummaryRow, leagues []db.GetAllLeaguesRow, selectedLeagueID int, maxRounds, maxPicks int) {
	<div id="draftboard-page" class="max-w-7xl mx-auto flex justify-between">
		<div class="flex-grow">
			@LeagueSelector(leagues, selectedLeagueID)
		</div>
		<div class="mb-4 flex justify-end">
			<a
				hx-get="/drafts"
				hx-target="main"
				class="text-blue-500 hover:text-blue-400 flex items-center gap-2"
			>
				<span>‚Üê Back to Draft Boards</span>
			</a>
		</div>
	</div>
	@DraftBoard(drafts, leagues, selectedLeagueID, maxRounds, maxPicks)
}

templ DraftContent(drafts []db.GetDraftBoardWithSummaryRow, leagues []db.GetAllLeaguesRow, selectedLeagueID int, maxRounds, maxPicks int) {
	<div id="draft-content">
		@DraftBoard(drafts, leagues, selectedLeagueID, maxRounds, maxPicks)
	</div>
}

templ LeagueSelector(leagues []db.GetAllLeaguesRow, selectedLeagueID int) {
	<div class="mb-6">
		<label for="league-select" class="block text-sm font-medium text-gray-300 mb-2">Select League</label>
		<select
			id="league-select"
			hx-get="/draftboard"
			hx-target="#draftboard-container"
			hx-swap="outerHTML"
			hx-trigger="change"
			name="id"
			class="bg-gray-700 border border-gray-600 text-gray-200 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-50 p-2.5"
		>
			for _, league := range leagues {
				<option
					value={ strconv.Itoa(int(league.ID)) }
					selected?={ league.ID == int32(selectedLeagueID) }
				>
					Season { strconv.Itoa(int(league.Year)) } - League { strconv.Itoa(int(league.ID)) }
				</option>
			}
		</select>
	</div>
}
